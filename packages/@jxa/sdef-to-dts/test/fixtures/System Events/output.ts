
export namespace SystemEvents {
    // Default Application
 export interface Application {}
    // Class
 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * user account
  */
 export interface User {
   /**
    * user's full name
    */
   fullName(): string;
   /**
    * path to user's home directory
    */
   homeDirectory(): any;
   /**
    * user's short name
    */
   name(): string;
   /**
    * path to user's picture. Can be set for current user only!
    */
   picturePath(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A collection of appearance preferences
  */
 export interface AppearancePreferencesObject {
   /**
    * the overall look of buttons, menus and windows
    */
   appearance(): any;
   /**
    * Is font smoothing on?
    */
   fontSmoothing(): boolean;
   /**
    * the font size at or below which font smoothing is turned off
    */
   fontSmoothingLimit(): number;
   /**
    * the method used for smoothing fonts
    */
   fontSmoothingStyle(): any;
   /**
    * color used for hightlighting selected text and lists
    */
   highlightColor(): any;
   /**
    * the number of recent applications to track
    */
   recentApplicationsLimit(): number;
   /**
    * the number of recent documents to track
    */
   recentDocumentsLimit(): number;
   /**
    * the number of recent servers to track
    */
   recentServersLimit(): number;
   /**
    * the action performed by clicking the scroll bar
    */
   scrollBarAction(): any;
   /**
    * Is smooth scrolling used?
    */
   smoothScrolling(): boolean;
   /**
    * use dark menu bar and dock
    */
   darkMode(): boolean;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * user's CD and DVD insertion preferences
  */
 export interface CDAndDvdPreferencesObject {
   /**
    * the blank CD insertion preference
    */
   blankCD(): any;
   /**
    * the blank DVD insertion preference
    */
   blankDVD(): any;
   /**
    * the blank BD insertion preference
    */
   blankBD(): any;
   /**
    * the music CD insertion preference
    */
   musicCD(): any;
   /**
    * the picture CD insertion preference
    */
   pictureCD(): any;
   /**
    * the video DVD insertion preference
    */
   videoDVD(): any;
   /**
    * the video BD insertion preference
    */
   videoBD(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * a specific insertion preference
  */
 export interface InsertionPreference {
   /**
    * application to launch or activate on the insertion of media
    */
   customApplication(): any;
   /**
    * AppleScript to launch or activate on the insertion of media
    */
   customScript(): any;
   /**
    * action to perform on media insertion
    */
   insertionAction(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * desktop picture settings
  */
 export interface Desktop {
   /**
    * name of the desktop
    */
   name(): string;
   /**
    * unique identifier of the desktop
    */
   id(): number;
   /**
    * number of seconds to wait between changing the desktop picture
    */
   changeInterval(): any;
   /**
    * name of display on which this desktop appears
    */
   displayName(): string;
   /**
    * path to file used as desktop picture
    */
   picture(): any;
   /**
    * never, using interval, using login, after sleep
    */
   pictureRotation(): number;
   /**
    * path to folder containing pictures for changing desktop background
    */
   picturesFolder(): any;
   /**
    * turn on for random ordering of changing desktop pictures
    */
   randomOrder(): boolean;
   /**
    * indicates whether the menu bar is translucent
    */
   translucentMenuBar(): boolean;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * user's dock preferences
  */
 export interface DockPreferencesObject {
   /**
    * is the animation of opening applications on or off?
    */
   animate(): boolean;
   /**
    * is autohiding the dock on or off?
    */
   autohide(): boolean;
   /**
    * size/height of the items (between 0.0 (minimum) and 1.0 (maximum))
    */
   dockSize(): any;
   /**
    * is magnification on or off?
    */
   magnification(): boolean;
   /**
    * maximum magnification size when magnification is on (between 0.0 (minimum) and 1.0 (maximum))
    */
   magnificationSize(): any;
   /**
    * minimization effect
    */
   minimizeEffect(): any;
   /**
    * location on screen
    */
   screenEdge(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * an item to be launched or opened at login
  */
 export interface LoginItem {
   /**
    * Is the Login Item hidden when launched?
    */
   hidden(): boolean;
   /**
    * the file type of the Login Item
    */
   kind(): string;
   /**
    * the name of the Login Item
    */
   name(): string;
   /**
    * the file system path to the Login Item
    */
   path(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A collection of settings for configuring a connection
  */
 export interface Configuration {
   /**
    * the name used to authenticate
    */
   accountName(): string;
   /**
    * Is the configuration connected?
    */
   connected(): boolean;
   /**
    * the unique identifier for the configuration
    */
   id(): string;
   /**
    * the name of the configuration
    */
   name(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A collection of settings for a network interface
  */
 export interface Interface {
   /**
    * configure the interface speed, duplex, and mtu automatically?
    */
   automatic(): boolean;
   /**
    * the duplex setting half | full | full with flow control
    */
   duplex(): string;
   /**
    * the unique identifier for the interface
    */
   id(): string;
   /**
    * the type of interface
    */
   kind(): string;
   /**
    * the MAC address for the interface
    */
   MACAddress(): string;
   /**
    * the packet size
    */
   mtu(): number;
   /**
    * the name of the interface
    */
   name(): string;
   /**
    * ethernet speed 10 | 100 | 1000
    */
   speed(): number;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A set of services
  */
 export interface Location {
   /**
    * the unique identifier for the location
    */
   id(): string;
   /**
    * the name of the location
    */
   name(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * the preferences for the current user's network
  */
 export interface NetworkPreferencesObject {
   /**
    * the current location
    */
   currentLocation(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A collection of settings for a network service
  */
 export interface Service {
   /**
    * Is the service active?
    */
   active(): boolean;
   /**
    * the currently selected configuration
    */
   currentConfiguration(): any;
   /**
    * the unique identifier for the service
    */
   id(): string;
   /**
    * the interface the service is built on
    */
   interface(): any;
   /**
    * the type of service
    */
   kind(): number;
   /**
    * the name of the service
    */
   name(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * an installed screen saver
  */
 export interface ScreenSaver {
   /**
    * name of the screen saver module as displayed to the user
    */
   displayedName(): string;
   /**
    * name of the screen saver module to be displayed
    */
   name(): string;
   /**
    * path to the screen saver module
    */
   path(): any;
   /**
    * effect to use when displaying picture-based screen savers (slideshow, collage, or mosaic)
    */
   pictureDisplayStyle(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * screen saver settings
  */
 export interface ScreenSaverPreferencesObject {
   /**
    * number of seconds of idle time before the screen saver starts; zero for never
    */
   delayInterval(): number;
   /**
    * should the screen saver be shown only on the main screen?
    */
   mainScreenOnly(): boolean;
   /**
    * is the screen saver running?
    */
   running(): boolean;
   /**
    * should a clock appear over the screen saver?
    */
   showClock(): boolean;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * Data in Audio format
  */
 export interface AudioData extends QuickTimeData {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A file containing data in Audio format
  */
 export interface AudioFile extends QuickTimeFile {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * a collection of security preferences
  */
 export interface SecurityPreferencesObject {
   /**
    * Is automatic login allowed?
    */
   automaticLogin(): boolean;
   /**
    * Will the computer log out when inactive?
    */
   logOutWhenInactive(): boolean;
   /**
    * The interval of inactivity after which the computer will log out
    */
   logOutWhenInactiveInterval(): number;
   /**
    * Is a password required to unlock secure preferences?
    */
   requirePasswordToUnlock(): boolean;
   /**
    * Is a password required to wake the computer from sleep or screen saver?
    */
   requirePasswordToWake(): boolean;
   /**
    * Is secure virtual memory being used?
    */
   secureVirtualMemory(): boolean;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * An alias in the file system
  */
 export interface Alias extends DiskItem {
   /**
    * the OSType identifying the application that created the alias
    */
   creatorType(): any;
   /**
    * the application that will launch if the alias is opened
    */
   defaultApplication(): any;
   /**
    * the OSType identifying the type of data contained in the alias
    */
   fileType(): any;
   /**
    * The kind of alias, as shown in Finder
    */
   kind(): string;
   /**
    * the version of the product (visible at the top of the "Get Info" window)
    */
   productVersion(): string;
   /**
    * the short version of the application bundle referenced by the alias
    */
   shortVersion(): string;
   /**
    * Is the alias a stationery pad?
    */
   stationery(): boolean;
   /**
    * The type identifier of the alias
    */
   typeIdentifier(): string;
   /**
    * the version of the application bundle referenced by the alias (visible at the bottom of the "Get Info" window)
    */
   version(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The Classic domain in the file system
  */
 export interface ClassicDomainObject extends Domain {
   /**
    * The Apple Menu Items folder
    */
   appleMenuFolder(): any;
   /**
    * The Control Panels folder
    */
   controlPanelsFolder(): any;
   /**
    * The Control Strip Modules folder
    */
   controlStripModulesFolder(): any;
   /**
    * The Classic Desktop folder
    */
   desktopFolder(): any;
   /**
    * The Extensions folder
    */
   extensionsFolder(): any;
   /**
    * The Fonts folder
    */
   fontsFolder(): any;
   /**
    * The Launcher Items folder
    */
   launcherItemsFolder(): any;
   /**
    * The Classic Preferences folder
    */
   preferencesFolder(): any;
   /**
    * The Shutdown Items folder
    */
   shutdownFolder(): any;
   /**
    * The StartupItems folder
    */
   startupItemsFolder(): any;
   /**
    * The System folder
    */
   systemFolder(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A disk in the file system
  */
 export interface Disk extends DiskItem {
   /**
    * the total number of bytes (free or used) on the disk
    */
   capacity(): number;
   /**
    * Can the media be ejected (floppies, CD's, and so on)?
    */
   ejectable(): boolean;
   /**
    * the file system format of this disk
    */
   format(): any;
   /**
    * the number of free bytes left on the disk
    */
   freeSpace(): number;
   /**
    * Ignore permissions on this disk?
    */
   ignorePrivileges(): boolean;
   /**
    * Is the media a local volume (as opposed to a file server)?
    */
   localVolume(): boolean;
   /**
    * the server on which the disk resides, AFP volumes only
    */
   server(): any;
   /**
    * Is this disk the boot disk?
    */
   startup(): boolean;
   /**
    * the zone in which the disk's server resides, AFP volumes only
    */
   zone(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * An item stored in the file system
  */
 export interface DiskItem {
   /**
    * Is the disk item busy?
    */
   busyStatus(): boolean;
   /**
    * the folder or disk which has this disk item as an element
    */
   container(): any;
   /**
    * the date on which the disk item was created
    */
   creationDate(): any;
   /**
    * the name of the disk item as displayed in the User Interface
    */
   displayedName(): string;
   /**
    * the unique ID of the disk item
    */
   id(): string;
   /**
    * the date on which the disk item was last modified
    */
   modificationDate(): any;
   /**
    * the name of the disk item
    */
   name(): string;
   /**
    * the extension portion of the name
    */
   nameExtension(): string;
   /**
    * Is the disk item a package?
    */
   packageFolder(): boolean;
   /**
    * the file system path of the disk item
    */
   path(): string;
   /**
    * the actual space used by the disk item on disk
    */
   physicalSize(): number;
   /**
    * the POSIX file system path of the disk item
    */
   POSIXPath(): string;
   /**
    * the logical size of the disk item
    */
   size(): number;
   /**
    * the URL of the disk item
    */
   URL(): string;
   /**
    * Is the disk item visible?
    */
   visible(): boolean;
   /**
    * the volume on which the disk item resides
    */
   volume(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A domain in the file system
  */
 export interface Domain {
   /**
    * The Application Support folder
    */
   applicationSupportFolder(): any;
   /**
    * The Applications folder
    */
   applicationsFolder(): any;
   /**
    * The Desktop Pictures folder
    */
   desktopPicturesFolder(): any;
   /**
    * The Folder Action Scripts folder
    */
   folderActionScriptsFolder(): any;
   /**
    * The Fonts folder
    */
   fontsFolder(): any;
   /**
    * the unique identifier of the domain
    */
   id(): string;
   /**
    * The Library folder
    */
   libraryFolder(): any;
   /**
    * the name of the domain
    */
   name(): string;
   /**
    * The Preferences folder
    */
   preferencesFolder(): any;
   /**
    * The Scripting Additions folder
    */
   scriptingAdditionsFolder(): any;
   /**
    * The Scripts folder
    */
   scriptsFolder(): any;
   /**
    * The Shared Documents folder
    */
   sharedDocumentsFolder(): any;
   /**
    * The Speakable Items folder
    */
   speakableItemsFolder(): any;
   /**
    * The Utilities folder
    */
   utilitiesFolder(): any;
   /**
    * The Automator Workflows folder
    */
   workflowsFolder(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A file in the file system
  */
 export interface File extends DiskItem {
   /**
    * the OSType identifying the application that created the file
    */
   creatorType(): any;
   /**
    * the application that will launch if the file is opened
    */
   defaultApplication(): any;
   /**
    * the OSType identifying the type of data contained in the file
    */
   fileType(): any;
   /**
    * The kind of file, as shown in Finder
    */
   kind(): string;
   /**
    * the version of the product (visible at the top of the "Get Info" window)
    */
   productVersion(): string;
   /**
    * the short version of the file
    */
   shortVersion(): string;
   /**
    * Is the file a stationery pad?
    */
   stationery(): boolean;
   /**
    * The type identifier of the file
    */
   typeIdentifier(): string;
   /**
    * the version of the file (visible at the bottom of the "Get Info" window)
    */
   version(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A file package in the file system
  */
 export interface FilePackage extends File {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A folder in the file system
  */
 export interface Folder extends DiskItem {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The local domain in the file system
  */
 export interface LocalDomainObject extends Domain {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The network domain in the file system
  */
 export interface NetworkDomainObject extends Domain {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The system domain in the file system
  */
 export interface SystemDomainObject extends Domain {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The user domain in the file system
  */
 export interface UserDomainObject extends Domain {
   /**
    * The user's Desktop folder
    */
   desktopFolder(): any;
   /**
    * The user's Documents folder
    */
   documentsFolder(): any;
   /**
    * The user's Downloads folder
    */
   downloadsFolder(): any;
   /**
    * The user's Favorites folder
    */
   favoritesFolder(): any;
   /**
    * The user's Home folder
    */
   homeFolder(): any;
   /**
    * The user's Movies folder
    */
   moviesFolder(): any;
   /**
    * The user's Music folder
    */
   musicFolder(): any;
   /**
    * The user's Pictures folder
    */
   picturesFolder(): any;
   /**
    * The user's Public folder
    */
   publicFolder(): any;
   /**
    * The user's Sites folder
    */
   sitesFolder(): any;
   /**
    * The Temporary Items folder
    */
   temporaryItemsFolder(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * Data in Movie format
  */
 export interface MovieData extends QuickTimeData {
   /**
    * the bounding rectangle of the movie file
    */
   bounds(): any;
   /**
    * the dimensions the movie has when it is not scaled
    */
   naturalDimensions(): any;
   /**
    * the preview duration of the movie file
    */
   previewDuration(): number;
   /**
    * the preview time of the movie file
    */
   previewTime(): number;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A file containing data in Movie format
  */
 export interface MovieFile extends QuickTimeFile {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * An action that can be performed on the UI element
  */
 export interface Action {
   /**
    * what the action does
    */
   description(): string;
   /**
    * the name of the action
    */
   name(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A process launched from an application file
  */
 export interface ApplicationProcess extends Process {
   /**
    * a reference to the application file from which this process was launched
    */
   applicationFile(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * An named data value associated with the UI element
  */
 export interface Attribute {
   /**
    * the name of the attribute
    */
   name(): string;
   /**
    * Can the attribute be set?
    */
   settable(): boolean;
   /**
    * the current value of the attribute
    */
   value(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A browser belonging to a window
  */
 export interface Browser extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A busy indicator belonging to a window
  */
 export interface BusyIndicator extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A button belonging to a window or scroll bar
  */
 export interface Button extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A checkbox belonging to a window
  */
 export interface Checkbox extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A color well belonging to a window
  */
 export interface ColorWell extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A column belonging to a table
  */
 export interface Column extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A combo box belonging to a window
  */
 export interface ComboBox extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A process launched from an desk accessory file
  */
 export interface DeskAccessoryProcess extends Process {
   /**
    * a reference to the desk accessory file from which this process was launched
    */
   deskAccessoryFile(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A drawer that may be extended from a window
  */
 export interface Drawer extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A group belonging to a window
  */
 export interface Group extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A grow area belonging to a window
  */
 export interface GrowArea extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * An image belonging to a static text field
  */
 export interface Image extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A incrementor belonging to a window
  */
 export interface Incrementor extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A list belonging to a window
  */
 export interface List extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A menu belonging to a menu bar item
  */
 export interface Menu extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A menu bar belonging to a process
  */
 export interface MenuBar extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A menu bar item belonging to a menu bar
  */
 export interface MenuBarItem extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A menu button belonging to a window
  */
 export interface MenuButton extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A menu item belonging to a menu
  */
 export interface MenuItem extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A outline belonging to a window
  */
 export interface Outline extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A pop over belonging to a window
  */
 export interface PopOver extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A pop up button belonging to a window
  */
 export interface PopUpButton extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A process running on this computer
  */
 export interface Process extends UIElement {
   /**
    * Is the process high-level event aware (accepts open application, open document, print document, and quit)?
    */
   acceptsHighLevelEvents(): boolean;
   /**
    * Does the process accept remote events?
    */
   acceptsRemoteEvents(): boolean;
   /**
    * the architecture in which the process is running
    */
   architecture(): string;
   /**
    * Does the process run exclusively in the background?
    */
   backgroundOnly(): boolean;
   /**
    * the bundle identifier of the process' application file
    */
   bundleIdentifier(): string;
   /**
    * Is the process running in the Classic environment?
    */
   classic(): boolean;
   /**
    * the OSType of the creator of the process (the signature)
    */
   creatorType(): string;
   /**
    * the name of the file from which the process was launched, as displayed in the User Interface
    */
   displayedName(): string;
   /**
    * the file from which the process was launched
    */
   file(): any;
   /**
    * the OSType of the file type of the process
    */
   fileType(): string;
   /**
    * Is the process the frontmost process
    */
   frontmost(): boolean;
   /**
    * Does the process have a scripting terminology, i.e., can it be scripted?
    */
   hasScriptingTerminology(): boolean;
   /**
    * The unique identifier of the process
    */
   id(): number;
   /**
    * the name of the process
    */
   name(): string;
   /**
    * the number of bytes currently used in the process' partition
    */
   partitionSpaceUsed(): number;
   /**
    * the short name of the file from which the process was launched
    */
   shortName(): any;
   /**
    * the size of the partition with which the process was launched
    */
   totalPartitionSize(): number;
   /**
    * The Unix process identifier of a process running in the native environment, or -1 for a process running in the Classic environment
    */
   unixId(): number;
   /**
    * Is the process' layer visible?
    */
   visible(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A progress indicator belonging to a window
  */
 export interface ProgressIndicator extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A radio button belonging to a window
  */
 export interface RadioButton extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A radio button group belonging to a window
  */
 export interface RadioGroup extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A relevance indicator belonging to a window
  */
 export interface RelevanceIndicator extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A row belonging to a table
  */
 export interface Row extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A scroll area belonging to a window
  */
 export interface ScrollArea extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A scroll bar belonging to a window
  */
 export interface ScrollBar extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A sheet displayed over a window
  */
 export interface Sheet extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A slider belonging to a window
  */
 export interface Slider extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A splitter belonging to a window
  */
 export interface Splitter extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A splitter group belonging to a window
  */
 export interface SplitterGroup extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A static text field belonging to a window
  */
 export interface StaticText extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A tab group belonging to a window
  */
 export interface TabGroup extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A table belonging to a window
  */
 export interface Table extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A text area belonging to a window
  */
 export interface TextArea extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A text field belonging to a window
  */
 export interface TextField extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A toolbar belonging to a window
  */
 export interface Toolbar extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A piece of the user interface of a process
  */
 export interface UIElement {
   /**
    * a more complete description of the UI element and its capabilities
    */
   accessibilityDescription(): any;
   /**
    * the class of the UI Element, which identifies it function
    */
   class(): any;
   /**
    * the accessibility description, if available; otherwise, the role description
    */
   description(): any;
   /**
    * Is the UI element enabled? ( Does it accept clicks? )
    */
   enabled(): any;
   /**
    * a list of every UI element contained in this UI element and its child UI elements, to the limits of the tree
    */
   entireContents(): any;
   /**
    * Is the focus on this UI element?
    */
   focused(): any;
   /**
    * an elaborate description of the UI element and its capabilities
    */
   help(): any;
   /**
    * the maximum value that the UI element can take on
    */
   maximumValue(): any;
   /**
    * the minimum value that the UI element can take on
    */
   minimumValue(): any;
   /**
    * the name of the UI Element, which identifies it within its container
    */
   name(): string;
   /**
    * the orientation of the UI element
    */
   orientation(): any;
   /**
    * the position of the UI element
    */
   position(): any;
   /**
    * an encoded description of the UI element and its capabilities
    */
   role(): string;
   /**
    * a more complete description of the UI element's role
    */
   roleDescription(): string;
   /**
    * Is the UI element selected?
    */
   selected(): any;
   /**
    * the size of the UI element
    */
   size(): any;
   /**
    * an encoded description of the UI element and its capabilities
    */
   subrole(): any;
   /**
    * the title of the UI element as it appears on the screen
    */
   title(): string;
   /**
    * the current value of the UI element
    */
   value(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A value indicator ( thumb or slider ) belonging to a scroll bar
  */
 export interface ValueIndicator extends UIElement {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A file containing data in Property List format
  */
 export interface PropertyListFile extends File {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A data blob
  */
 export interface Data {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A unit of data in Property List format
  */
 export interface PropertyListItem {
   /**
    * the kind of data stored in the property list item: boolean/data/date/list/number/record/string
    */
   kind(): any;
   /**
    * the name of the property list item ( if any )
    */
   name(): string;
   /**
    * the text representation of the property list data
    */
   text(): string;
   /**
    * the value of the property list item
    */
   value(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A unit of user data in a QuickTime file
  */
 export interface Annotation {
   /**
    * the full text of the annotation
    */
   fullText(): string;
   /**
    * the unique identifier of the annotation
    */
   id(): string;
   /**
    * the name of the annotation
    */
   name(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * Data in QuickTime format
  */
 export interface QuickTimeData {
   /**
    * will the movie automatically start playing? (saved with QuickTime file)
    */
   autoPlay(): boolean;
   /**
    * will the movie automatically start presenting? (saved with QuickTime file)
    */
   autoPresent(): boolean;
   /**
    * will the player automatically quit when done playing? (saved with QuickTime file)
    */
   autoQuitWhenDone(): boolean;
   /**
    * the creation time of the QuickTime file
    */
   creationTime(): any;
   /**
    * the size of the QuickTime file data
    */
   dataSize(): number;
   /**
    * the duration of the QuickTime file, in terms of the time scale
    */
   duration(): number;
   /**
    * the internet location to open when clicking on the movie (overrides track hrefs)
    */
   href(): string;
   /**
    * keep playing the movie in a loop?
    */
   looping(): boolean;
   /**
    * the modification time of the QuickTime file
    */
   modificationTime(): any;
   /**
    * the preferred rate of the QuickTime file
    */
   preferredRate(): number;
   /**
    * the preferred volume of the QuickTime file
    */
   preferredVolume(): number;
   /**
    * mode in which the movie will be presented
    */
   presentationMode(): any;
   /**
    * size at which the movie will be presented
    */
   presentationSize(): any;
   /**
    * is this a stored streaming movie?
    */
   storedStream(): boolean;
   /**
    * the time scale of the QuickTime file
    */
   timeScale(): number;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A file containing data in QuickTime format
  */
 export interface QuickTimeFile extends File {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A track in a QuickTime file
  */
 export interface Track {
   /**
    * the number of channels in the audio
    */
   audioChannelCount(): number;
   /**
    * can the track be heard?
    */
   audioCharacteristic(): boolean;
   /**
    * the sample rate of the audio in kHz
    */
   audioSampleRate(): any;
   /**
    * the size of uncompressed audio samples in bits
    */
   audioSampleSize(): number;
   /**
    * the creation time of the track
    */
   creationTime(): any;
   /**
    * the data format
    */
   dataFormat(): string;
   /**
    * the data rate (bytes/sec) of the track
    */
   dataRate(): number;
   /**
    * the size of the track data
    */
   dataSize(): number;
   /**
    * the current dimensions of the track
    */
   dimensions(): any;
   /**
    * the duration of the track, in terms of the time scale
    */
   duration(): number;
   /**
    * should this track be used when the movie is playing?
    */
   enabled(): boolean;
   /**
    * is the track high quality?
    */
   highQuality(): boolean;
   /**
    * the internet location to open when clicking on the track
    */
   href(): string;
   /**
    * the name of the media in the track, in the current language (e.g., 'Sound', 'Video', 'Text', ...)
    */
   kind(): string;
   /**
    * the modification time of the track
    */
   modificationTime(): any;
   /**
    * the name of the track
    */
   name(): string;
   /**
    * the time delay before this track starts playing
    */
   startTime(): number;
   /**
    * the type of media in the track (e.g., 'soun', 'vide', 'text', ...)
    */
   type(): string;
   /**
    * deprecated: use "type" instead ( included only to resolve a terminology conflict, script text will be updated upon compilation )
    */
   typeClass(): string;
   /**
    * the color depth of the video
    */
   videoDepth(): number;
   /**
    * can the track be seen?
    */
   visualCharacteristic(): boolean;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A named value associated with a unit of data in XML format
  */
 export interface XMLAttribute {
   /**
    * the name of the XML attribute
    */
   name(): string;
   /**
    * the value of the XML attribute
    */
   value(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * Data in XML format
  */
 export interface XMLData {
   /**
    * the unique identifier of the XML data
    */
   id(): string;
   /**
    * the name of the XML data
    */
   name(): string;
   /**
    * the text representation of the XML data
    */
   text(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A unit of data in XML format
  */
 export interface XMLElement {
   /**
    * the unique identifier of the XML element
    */
   id(): string;
   /**
    * the name of the XML element
    */
   name(): string;
   /**
    * the value of the XML element
    */
   value(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A file containing data in XML format
  */
 export interface XMLFile extends File {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 export interface PrintSettings {
   /**
    * the number of copies of a document to be printed
    */
   copies(): number;
   /**
    * Should printed copies be collated?
    */
   collating(): boolean;
   /**
    * the first page of the document to be printed
    */
   startingPage(): number;
   /**
    * the last page of the document to be printed
    */
   endingPage(): number;
   /**
    * number of logical pages laid across a physical page
    */
   pagesAcross(): number;
   /**
    * number of logical pages laid out down a physical page
    */
   pagesDown(): number;
   /**
    * the time at which the desktop printer should print the document
    */
   requestedPrintTime(): any;
   /**
    * how errors are handled
    */
   errorHandling(): any;
   /**
    * for fax number
    */
   faxNumber(): string;
   /**
    * for target printer
    */
   targetPrinter(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A class within a suite within a scripting definition
  */
 export interface ScriptingClass {
   /**
    * The name of the class
    */
   name(): string;
   /**
    * The unique identifier of the class
    */
   id(): string;
   /**
    * The description of the class
    */
   description(): string;
   /**
    * Is the class hidden?
    */
   hidden(): boolean;
   /**
    * The plural name of the class
    */
   pluralName(): string;
   /**
    * The name of the suite to which this class belongs
    */
   suiteName(): string;
   /**
    * The class from which this class inherits
    */
   superclass(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A command within a suite within a scripting definition
  */
 export interface ScriptingCommand {
   /**
    * The name of the command
    */
   name(): string;
   /**
    * The unique identifier of the command
    */
   id(): string;
   /**
    * The description of the command
    */
   description(): string;
   /**
    * The direct parameter of the command
    */
   directParameter(): any;
   /**
    * Is the command hidden?
    */
   hidden(): boolean;
   /**
    * The object or data returned by this command
    */
   scriptingResult(): any;
   /**
    * The name of the suite to which this command belongs
    */
   suiteName(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The scripting definition of the System Events applicaation
  */
 export interface ScriptingDefinitionObject {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * An element within a class within a suite within a scripting definition
  */
 export interface ScriptingElement extends ScriptingClass {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * An enumeration within a suite within a scripting definition
  */
 export interface ScriptingEnumeration {
   /**
    * The name of the enumeration
    */
   name(): string;
   /**
    * The unique identifier of the enumeration
    */
   id(): string;
   /**
    * Is the enumeration hidden?
    */
   hidden(): boolean;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * An enumerator within an enumeration within a suite within a scripting definition
  */
 export interface ScriptingEnumerator {
   /**
    * The name of the enumerator
    */
   name(): string;
   /**
    * The unique identifier of the enumerator
    */
   id(): string;
   /**
    * The description of the enumerator
    */
   description(): string;
   /**
    * Is the enumerator hidden?
    */
   hidden(): boolean;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A parameter within a command within a suite within a scripting definition
  */
 export interface ScriptingParameter {
   /**
    * The name of the parameter
    */
   name(): string;
   /**
    * The unique identifier of the parameter
    */
   id(): string;
   /**
    * The description of the parameter
    */
   description(): string;
   /**
    * Is the parameter hidden?
    */
   hidden(): boolean;
   /**
    * The kind of object or data specified by this parameter
    */
   kind(): string;
   /**
    * Is the parameter optional?
    */
   optional(): boolean;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A property within a class within a suite within a scripting definition
  */
 export interface ScriptingProperty {
   /**
    * The name of the property
    */
   name(): string;
   /**
    * The unique identifier of the property
    */
   id(): string;
   /**
    * The type of access to this property
    */
   access(): any;
   /**
    * The description of the property
    */
   description(): string;
   /**
    * Is the property's value an enumerator?
    */
   enumerated(): boolean;
   /**
    * Is the property hidden?
    */
   hidden(): boolean;
   /**
    * The kind of object or data returned by this property
    */
   kind(): string;
   /**
    * Is the property's value a list?
    */
   listed(): boolean;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The result of a command within a suite within a scripting definition
  */
 export interface ScriptingResultObject {
   /**
    * The description of the property
    */
   description(): string;
   /**
    * Is the scripting result's value an enumerator?
    */
   enumerated(): boolean;
   /**
    * The kind of object or data returned by this property
    */
   kind(): string;
   /**
    * Is the scripting result's value a list?
    */
   listed(): boolean;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A suite within a scripting definition
  */
 export interface ScriptingSuite {
   /**
    * The name of the suite
    */
   name(): string;
   /**
    * The unique identifier of the suite
    */
   id(): string;
   /**
    * The description of the suite
    */
   description(): string;
   /**
    * Is the suite hidden?
    */
   hidden(): boolean;
 }
    
    // CLass Extension
 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {
   /**
    * the time in seconds the application will idle before quitting; if set to zero, idle time will not cause the application to quit
    */
   quitDelay(): number;
   /**
    * Is the Script menu installed in the menu bar?
    */
   scriptMenuEnabled(): boolean;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {
   /**
    * the currently logged in user
    */
   currentUser(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {
   /**
    * a collection of appearance preferences
    */
   appearancePreferences(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {
   /**
    * the preferences for the current user when a CD or DVD is inserted
    */
   CDAndDvdPreferences(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {
   /**
    * the primary desktop
    */
   currentDesktop(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {
   /**
    * the preferences for the current user's dock
    */
   dockPreferences(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {
   /**
    * the preferences for the current user's network
    */
   networkPreferences(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {
   /**
    * the currently selected screen saver
    */
   currentScreenSaver(): any;
   /**
    * the preferences common to all screen savers
    */
   screenSaverPreferences(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {
   /**
    * a collection of security preferences
    */
   securityPreferences(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The Disk-Folder-File specific extensions to the application
  */
 export interface Application {
   /**
    * The Application Support folder
    */
   applicationSupportFolder(): any;
   /**
    * The user's Applications folder
    */
   applicationsFolder(): any;
   /**
    * the collection of folders belonging to the Classic System
    */
   classicDomain(): any;
   /**
    * The user's Desktop folder
    */
   desktopFolder(): any;
   /**
    * The Desktop Pictures folder
    */
   desktopPicturesFolder(): any;
   /**
    * The user's Documents folder
    */
   documentsFolder(): any;
   /**
    * The user's Downloads folder
    */
   downloadsFolder(): any;
   /**
    * The user's Favorites folder
    */
   favoritesFolder(): any;
   /**
    * The user's Folder Action Scripts folder
    */
   folderActionScriptsFolder(): any;
   /**
    * The Fonts folder
    */
   fontsFolder(): any;
   /**
    * The Home folder of the currently logged in user
    */
   homeFolder(): any;
   /**
    * The Library folder
    */
   libraryFolder(): any;
   /**
    * the collection of folders residing on the Local machine
    */
   localDomain(): any;
   /**
    * The user's Movies folder
    */
   moviesFolder(): any;
   /**
    * The user's Music folder
    */
   musicFolder(): any;
   /**
    * the collection of folders residing on the Network
    */
   networkDomain(): any;
   /**
    * The user's Pictures folder
    */
   picturesFolder(): any;
   /**
    * The user's Preferences folder
    */
   preferencesFolder(): any;
   /**
    * The user's Public folder
    */
   publicFolder(): any;
   /**
    * The Scripting Additions folder
    */
   scriptingAdditionsFolder(): any;
   /**
    * The user's Scripts folder
    */
   scriptsFolder(): any;
   /**
    * The Shared Documents folder
    */
   sharedDocumentsFolder(): any;
   /**
    * The user's Sites folder
    */
   sitesFolder(): any;
   /**
    * The Speakable Items folder
    */
   speakableItemsFolder(): any;
   /**
    * the disk from which Mac OS X was loaded
    */
   startupDisk(): any;
   /**
    * the collection of folders belonging to the System
    */
   systemDomain(): any;
   /**
    * The Temporary Items folder
    */
   temporaryItemsFolder(): any;
   /**
    * The user's Trash folder
    */
   trash(): any;
   /**
    * the collection of folders belonging to the User
    */
   userDomain(): any;
   /**
    * The Utilities folder
    */
   utilitiesFolder(): any;
   /**
    * The Automator Workflows folder
    */
   workflowsFolder(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {
   /**
    * Are UI element events currently being processed?
    */
   UIElementsEnabled(): boolean;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A window belonging to a process
  */
 export interface Window {
   /**
    * a more complete description of the window and its capabilities
    */
   accessibilityDescription(): any;
   /**
    * the class of the window, which identifies its function
    */
   class(): any;
   /**
    * the accessibility description, if available; otherwise, the role description
    */
   description(): any;
   /**
    * Is the window enabled? ( Does it accept clicks? )
    */
   enabled(): any;
   /**
    * a list of every UI element contained in this window and its child UI elements, to the limits of the tree
    */
   entireContents(): any;
   /**
    * Is the focus on this window?
    */
   focused(): any;
   /**
    * an elaborate description of the window and its capabilities
    */
   help(): any;
   /**
    * the maximum value that the UI element can take on
    */
   maximumValue(): any;
   /**
    * the minimum value that the UI element can take on
    */
   minimumValue(): any;
   /**
    * the name of the window, which identifies it within its container
    */
   name(): string;
   /**
    * the orientation of the window
    */
   orientation(): any;
   /**
    * the position of the window
    */
   position(): any;
   /**
    * an encoded description of the window and its capabilities
    */
   role(): string;
   /**
    * a more complete description of the window's role
    */
   roleDescription(): string;
   /**
    * Is the window selected?
    */
   selected(): any;
   /**
    * the size of the window
    */
   size(): any;
   /**
    * an encoded description of the window and its capabilities
    */
   subrole(): any;
   /**
    * the title of the window as it appears on the screen
    */
   title(): string;
   /**
    * the current value of the window
    */
   value(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 export interface PropertyListItem {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The Folder Actions specific extensions to the folder class
  */
 export interface Folder {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The System Events application
  */
 export interface Application {
   /**
    * The scripting definition of the System Events application
    */
   scriptingDefinition(): any;
 }
    
    // Records

    // Function options








    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface MoveOptionalParameter {
      /**
       * The new location for the disk item(s).
       */
      to: any;
    }



    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface RestartOptionalParameter {
      /**
       * Is the user defined state saving preference followed?
       */
      stateSavingPreference?: boolean;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface ShutDownOptionalParameter {
      /**
       * Is the user defined state saving preference followed?
       */
      stateSavingPreference?: boolean;
    }


    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface ClickOptionalParameter {
      /**
       * when sent to a "process" object, the { x, y } location at which to click, in global coordinates
       */
      at?: any;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface KeyCodeOptionalParameter {
      /**
       * modifiers with which the key codes are to be entered
       */
      using?: any;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface KeystrokeOptionalParameter {
      /**
       * modifiers with which the keystrokes are to be entered
       */
      using?: any;
    }



    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface AttachActionToOptionalParameter {
      /**
       * a file containing the script to attach
       */
      using: string;
    }





    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface DoFolderActionOptionalParameter {
      /**
       * the folder action message to process
       */
      folderActionCode: any;
      /**
       * a list of items for the folder action message to process
       */
      withItemList?: any;
      /**
       * the new window size for the folder action message to process
       */
      withWindowSize?: any;
    }


    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface EditActionOfOptionalParameter {
      /**
       * ...or the name of the action to edit
       */
      usingActionName?: string;
      /**
       * the index number of the action to edit...
       */
      usingActionNumber?: number;
    }





    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface RemoveActionFromOptionalParameter {
      /**
       * ...or the name of the action to remove
       */
      usingActionName?: string;
      /**
       * the index number of the action to remove...
       */
      usingActionNumber?: number;
    }

}
export interface SystemEvents extends SystemEvents.Application {
    // Functions

     /**
      * Discard the results of a bounded update session with one or more files.

      * 
      */
     abortTransaction(): void;

     /**
      * Begin a bounded update session with one or more files.

      * @return undefined
      */
     beginTransaction(): number;

     /**
      * Apply the results of a bounded update session with one or more files.

      * 
      */
     endTransaction(): void;

     /**
      * connect a configuration or service
      * @param directParameter a configuration or service
      * @return undefined
      */
     connect(directParameter: {}, ): SystemEvents.Configuration;

     /**
      * disconnect a configuration or service
      * @param directParameter a configuration or service
      * @return undefined
      */
     disconnect(directParameter: {}, ): SystemEvents.Configuration;

     /**
      * start the screen saver
      * @param directParameter the object for the command
      * 
      */
     start(directParameter: {}, ): void;

     /**
      * stop the screen saver
      * @param directParameter the object for the command
      * 
      */
     stop(directParameter: {}, ): void;

     /**
      * Delete disk item(s).
      * @param directParameter The disk item(s) to be deleted.
      * 
      */
     delete(directParameter: SystemEvents.DiskItem, ): void;

     /**
      * Move disk item(s) to a new location.
      * @param directParameter The disk item(s) to be moved.
      * @param option
      * @return undefined
      */
     move(directParameter: {}, option?: SystemEvents.MoveOptionalParameter): void;

     /**
      * Open disk item(s) with the appropriate application.
      * @param directParameter The disk item(s) to be opened.
      * @return undefined
      */
     open(directParameter: {}, ): SystemEvents.File;

     /**
      * Log out the current user

      * 
      */
     logOut(): void;

     /**
      * Restart the computer

      * @param option
      * 
      */
     restart(option?: SystemEvents.RestartOptionalParameter): void;

     /**
      * Shut Down the computer

      * @param option
      * 
      */
     shutDown(option?: SystemEvents.ShutDownOptionalParameter): void;

     /**
      * Put the computer to sleep

      * 
      */
     sleep(): void;

     /**
      * cause the target process to behave as if the UI element were clicked
      * @param directParameter The UI element to be clicked.
      * @param option
      * @return undefined
      */
     click(directParameter?: SystemEvents.UIElement, option?: SystemEvents.ClickOptionalParameter): void;

     /**
      * cause the target process to behave as if key codes were entered
      * @param directParameter The key code(s) to be sent. May be a list.
      * @param option
      * 
      */
     keyCode(directParameter: {}, option?: SystemEvents.KeyCodeOptionalParameter): void;

     /**
      * cause the target process to behave as if keystrokes were entered
      * @param directParameter The keystrokes to be sent.
      * @param option
      * 
      */
     keystroke(directParameter: string, option?: SystemEvents.KeystrokeOptionalParameter): void;

     /**
      * cause the target process to behave as if the action were applied to its UI element
      * @param directParameter The action to be performed.
      * @return undefined
      */
     perform(directParameter: SystemEvents.Action, ): SystemEvents.Action;

     /**
      * set the selected property of the UI element
      * @param directParameter The UI element to be selected.
      * @return undefined
      */
     select(directParameter: SystemEvents.UIElement, ): SystemEvents.UIElement;

     /**
      * Attach an action to a folder
      * @param directParameter the object for the command
      * @param option
      * @return undefined
      */
     attachActionTo(directParameter: any, option?: SystemEvents.AttachActionToOptionalParameter): any;

     /**
      * List the actions attached to a folder
      * @param directParameter the object for the command
      * @return undefined
      */
     attachedScripts(directParameter: any, ): void;

     /**
      * cause the target process to behave as if the UI element were cancelled
      * @param directParameter the object for the command
      * @return undefined
      */
     cancel(directParameter: any, ): SystemEvents.UIElement;

     /**
      * cause the target process to behave as if the UI element were confirmed
      * @param directParameter the object for the command
      * @return undefined
      */
     confirm(directParameter: any, ): SystemEvents.UIElement;

     /**
      * cause the target process to behave as if the UI element were decremented
      * @param directParameter the object for the command
      * @return undefined
      */
     decrement(directParameter: any, ): SystemEvents.UIElement;

     /**
      * Send a folder action code to a folder action script
      * @param directParameter the object for the command
      * @param option
      * 
      */
     doFolderAction(directParameter: any, option?: SystemEvents.DoFolderActionOptionalParameter): void;

     /**
      * Execute an OSA script.
      * @param directParameter the object for the command
      * @return undefined
      */
     doScript(directParameter: {}, ): any;

     /**
      * Edit an action of a folder
      * @param directParameter the object for the command
      * @param option
      * @return undefined
      */
     editActionOf(directParameter: any, option?: SystemEvents.EditActionOfOptionalParameter): SystemEvents.File;

     /**
      * cause the target process to behave as if the UI element were incremented
      * @param directParameter the object for the command
      * @return undefined
      */
     increment(directParameter: any, ): SystemEvents.UIElement;

     /**
      * cause the target process to behave as if keys were held down
      * @param directParameter the object for the command
      * 
      */
     keyDown(directParameter: any, ): void;

     /**
      * cause the target process to behave as if keys were released
      * @param directParameter the object for the command
      * 
      */
     keyUp(directParameter: any, ): void;

     /**
      * cause the target process to behave as if the UI element were picked
      * @param directParameter the object for the command
      * @return undefined
      */
     pick(directParameter: any, ): SystemEvents.UIElement;

     /**
      * Remove a folder action from a folder
      * @param directParameter the object for the command
      * @param option
      * @return undefined
      */
     removeActionFrom(directParameter: any, option?: SystemEvents.RemoveActionFromOptionalParameter): any;
}
